// Generated by Xata Codegen 0.28.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "files",
    columns: [
      { name: "file", type: "file", file: { defaultPublicAccess: true } },
      { name: "googleURL", type: "string" },
      { name: "originalUploadDate", type: "datetime" },
      { name: "visionLabel", type: "json" },
      { name: "visionImageProperties", type: "json" },
      { name: "dominantColor", type: "string" },
      { name: "textContent", type: "text" },
      { name: "visionText", type: "json" },
      { name: "focusColor", type: "string" },
      {
        name: "fileTypeCategory",
        type: "string",
        notNull: true,
        defaultValue: "unknown",
      },
      { name: "isHidden", type: "bool", notNull: true, defaultValue: "false" },
      {
        name: "isFavorite",
        type: "bool",
        notNull: true,
        defaultValue: "false",
      },
    ],
  },
  {
    name: "galleries",
    columns: [
      {
        name: "images",
        type: "file[]",
        "file[]": { defaultPublicAccess: true },
      },
    ],
  },
  {
    name: "links",
    columns: [
      { name: "title", type: "string", notNull: true, defaultValue: "title" },
      {
        name: "url",
        type: "string",
        notNull: true,
        defaultValue: "https://example.com",
      },
      { name: "tags", type: "string" },
      { name: "comment", type: "string" },
      { name: "isPrivate", type: "bool", notNull: true, defaultValue: "true" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Files = InferredTypes["files"];
export type FilesRecord = Files & XataRecord;

export type Galleries = InferredTypes["galleries"];
export type GalleriesRecord = Galleries & XataRecord;

export type Links = InferredTypes["links"];
export type LinksRecord = Links & XataRecord;

export type DatabaseSchema = {
  files: FilesRecord;
  galleries: GalleriesRecord;
  links: LinksRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Dave-Snider-s-workspace-pghsjs.us-east-1.xata.sh/db/davesnider-dot-com",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
