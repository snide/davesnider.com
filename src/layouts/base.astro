---
import Nav from '@components/nav/nav.astro';
import Mobile from '@components/mobile.astro';
import '@fontsource-variable/aleo';
import AnimateItems from '@components/animate.astro';
import aleo from '@fontsource-variable/aleo/files/aleo-latin-wght-normal.woff2';
import { ViewTransitions } from 'astro:transitions';

interface Props {
  pageTitle?: string;
  pageDescription?: string;
  pageImage?: string;
  hideNav?: boolean;
  pageSlug?: string;
}
const {
  pageTitle,
  pageDescription = 'Dave Snider is a chaotic good web designer based out of Annapolis, MD that builds in the browser.',
  pageImage,
  hideNav = false,
  pageSlug = 'https://davesnider.com'
} = Astro.props;
---

<html lang="en" id="html">
  <head>
    <meta charset="utf-8" />
    <link rel="preload" as="font" href={aleo} type="font/woff2" crossorigin="anonymous" />
    <link rel="preload" as="font" href="/Sovana-Regular.woff" type="font/woff2" crossorigin="anonymous" />
    <link rel="icon" href="/favicon.ico" sizes="any" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/manifest.webmanifest" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDescription} />
    <meta property="og:url" content={Astro.url} />
    {pageImage && <meta property="og:image" content={pageImage} />}
    <title>{pageTitle && `${pageTitle} - `}Dave Snider</title>
    <meta name="description" content={pageDescription} />
    <style is:global>
      * {
        box-sizing: border-box;
      }

      /*
      1. Use a more-intuitive box-sizing model.
    */
      *,
      *::before,
      *::after {
        box-sizing: border-box;
      }
      /*
      2. Remove default margin
    */
      * {
        margin: 0;
      }
      /*
      3. Allow percentage-based heights in the application
    */
      html,
      body {
        height: 100%;
      }
      /*
      Typographic tweaks!
      4. Add accessible line-height
      5. Improve text rendering
    */
      body {
        line-height: 1.5;
        -webkit-font-smoothing: antialiased;
      }
      /*
      6. Improve media defaults
    */
      img,
      picture,
      video,
      canvas,
      svg {
        display: block;
        max-width: 100%;
      }
      /*
      7. Remove built-in form typography styles
    */
      input,
      button,
      textarea,
      select {
        font: inherit;
      }
      /*
      8. Avoid text overflows
    */
      p,
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        overflow-wrap: break-word;
      }
      /*
      9. Create a root stacking context
    */
      #root,
      #__next {
        isolation: isolate;
      }

      a {
        color: inherit;
        text-decoration: none;
      }
      @font-face {
        src: url('/Sovana-Regular.woff') format('woff');
        font-family: 'Sovana';
        font-weight: normal;
        font-style: normal;
        font-display: swap;
      }

      @font-face {
        font-family: 'BerkeleyMono';
        src: url('/BerkeleyMonoVariable-Regular.woff') format('woff');
        font-weight: normal;
        font-style: normal;
        font-display: swap;
      }

      :root,
      html[data-theme='light'] {
        --fg: #000;
        --bg: #e5e5e5;
        --subtle: #222;
        --codeBg: #222;
        --navBg: #fff;
      }

      :root,
      html[data-theme='dark'] {
        --fg: #fff;
        --bg: #151515;
        --subtle: #ccc;
        --codeBg: #222;
        --navBg: #222;
      }

      html {
        background-color: var(--bg);
        color: var(--fg);
        font-family: 'Aleo Variable', serif;
        -webkit-font-smoothing: antialiased;
        font-weight: 450;
        -moz-osx-font-smoothing: grayscale;
        text-rendering: optimizelegibility;
      }

      body {
        margin: 0 auto;
        width: 100%;
        line-height: 1.5;
      }

      body.noScroll {
        overflow: hidden;
        max-height: 100vh;
      }

      .base {
        display: flex;
      }

      .content {
        flex: 1;
        padding: 4.8rem 2rem 4.4rem 0;
        max-width: 100%;
      }

      ::selection {
        color: var(--bg);
        background-color: var(--fg);
      }

      /*  *:focus {  */
      /*  outline: none;  */
      /*  box-shadow: none;  */
      /*  }  */
      *:focus-visible {
        outline-width: 4px;
        outline-style: solid;
        outline-color: var(--fg);
        box-shadow: none !important;
      }

      @media (max-width: 768px) {
        .base {
          padding-top: 3.25rem;
        }
        .content {
          padding-left: 2rem;
          padding-top: 3rem;
          padding-bottom: 3rem;
        }
      }
    </style>
    <ViewTransitions />
  </head>
  <body>
    <Mobile />
    <div class="base">
      {!hideNav && <Nav />}

      <main class="content">
        <AnimateItems>
          <slot />
        </AnimateItems>
      </main>
    </div>
  </body>
</html>
