---
import Base from '@layouts/base.astro';
import { getCollection } from 'astro:content';
const posts = await getCollection('posts');

const sortedPosts = posts.sort((a, b) => {
  return new Date(b.data.pubDate) - new Date(a.data.pubDate);
});
const urls = posts.map((post) => `https://davesnider.com/posts/${post.slug}`);
---

<Base>
  <div class="hello">
    <h1 class="animate-item">Hello, I'm <a href="/about">Dave</a></h1>
  </div>
  {
    sortedPosts.map((post, index) => {
      if (post.data.image) {
        return (
          <a href={`/posts/${post.slug}`} class="feedItem animate-item has-image">
            <img src={post.data.image} alt="image" width="100%" height="100%" />
            <div class="imageInner">
              <h2>{post.data.title}</h2>
              <p>{post.data.description}</p>
            </div>
          </a>
        );
      }
      return (
        <a href={`/posts/${post.slug}`} class="feedItem animate-item">
          <h2>{post.data.title}</h2>
          <p>{post.data.description}</p>
        </a>
      );
    })
  }
</Base>

<style define:vars={{}}>
  .feedItem {
    display: block;
    max-width: 40rem;
    margin: 0 auto;
    padding: 2rem;
    position: relative;
  }
  .feedItem:hover,
  .feedItem:focgus {
    border-color: var(--fg);
  }
  .feedItem:hover h2,
  .feedItem:focus h2 {
    background-color: var(--fg);
    color: var(--bg);
    outline: solid 4px var(--fg);
  }

  .feedItem.has-image {
    margin: 0.5rem auto;
    background-position: center center;
    aspect-ratio: 3 / 2;
    padding: 0;
    max-width: 42rem;
    overflow: hidden;
  }
  .feedItem.has-image img {
    transition: all 0.2s ease-in-out;
    filter: grayscale(100%);
    opacity: 1;
    max-width: fit-content;
  }

  .feedItem.has-image:hover img,
  .feedItem.has-image:focus img {
    filter: none !important;
    opacity: 1 !important;
  }

  html[data-theme='dark'] .feedItem.has-image img {
    filter: grayscale(100%);
  }

  html[data-theme='light'] .feedItem.has-image img {
    filter: grayscale(100%);
  }

  p {
    margin-top: 0.5rem;
    color: var(--subtle);
  }
  .imageInner {
    background: var(--bg);
    display: inline-block;
    height: 'auto';
    padding: 1rem;
    position: absolute;
    left: 2rem;
    bottom: 2rem;
    max-width: 66%;
  }

  h2 {
    display: inline;
    font-size: 1.5rem;
    line-height: 1.1;
    margin-bottom: 0.5rem;
  }

  .hello {
    margin: 0 auto;
    max-width: 36rem;
  }

  h1 {
    font-family: var(--displayFont);
    font-size: 3rem;
    line-height: 1;
    margin-bottom: 3rem !important;
    opacity: 1;
    animation-duration: 0.25s;
    animation-name: slidedown !important;
    animation-fill-mode: both;
    animation-timing-function: ease-in-out;
  }
  .hello a {
    text-decoration: underline;
  }
  .hello a:hover,
  .hello a:focus {
    background-color: var(--fg);
    color: var(--bg);
    outline: solid 4px var(--fg);
  }

  @keyframes slidedown {
    from {
      opacity: 0;
      transform: translateY(-3rem);
    }

    to {
      opacity: 1;
    }
  }
  @media (max-width: 768px) {
    h1 {
      padding: 0 1rem;
    }
    .feedItem.has-image {
      margin-left: -1rem;
      margin-right: -1rem;
    }
    .feedItem {
      padding-left: 1rem;
      padding-right: 1rem;
    }
    .imageInner {
      left: 0.5rem;
      bottom: 0.5rem;
      width: calc(100% - 1rem);
      padding: 1.5rem;
      max-width: 100%;
      right: 0.5rem;
    }
  }
</style>
