---
const { name } = Astro.props;
import { db } from '@db/db';
import { filesTable, galleryTable, galleryToFilesTable } from '@db/schema';
import { eq } from 'drizzle-orm';
import { buildImage, type FileRecordWithThumb } from '@lib/image';

const gallery = await db.select().from(galleryTable).where(eq(galleryTable.name, name)).get();

if (!gallery) {
  throw new Error(`Gallery with name "${name}" not found.`);
}
const galleryFiles = await db
  .select()
  .from(galleryToFilesTable)
  .where(eq(galleryToFilesTable.galleryId, gallery.id))
  .innerJoin(filesTable, eq(galleryToFilesTable.fileId, filesTable.id))
  .all();

const images = await Promise.all(
  galleryFiles.map((file) => {
    const image = buildImage(file.files.url as string, 'w=1200,h=1200,fit=scale-down');
    return image;
  })
);

console.log(images);
---

<div class="gallery">
  {
    images.map((image) => (
      <img src={image?.resizedUrl} width={image?.details?.width} height={image?.details?.height} alt="Folder image" />
    ))
  }
</div>

<style>
  .gallery {
    margin: 6rem auto !important;
    max-width: 1200px !important;
  }
  img {
    width: 100% !important;
    height: auto;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 0.5rem !important;
  }

  img:last-child {
    margin-bottom: 0;
  }
</style>
